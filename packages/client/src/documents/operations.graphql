query getAllAccounts {
  accounts {
    ...AccountFields
  }
}

query getAccount($accountId: ID!) {
  account(id: $accountId) {
    ...AccountFields
    conversations(label: "\\Inbox") {
      ...ConversationFieldsForListView
    }
  }
}

mutation deleteAccount($id: ID!) {
  accounts {
    delete(id: $id)
  }
}

mutation addAccount($email: String!) {
  accounts {
    create(email: $email) {
      ...AccountFields
    }
  }
}

mutation authenticate($id: ID!) {
  accounts {
    authenticate(id: $id) {
      ...AccountFields
    }
  }
}

query getConversation($id: ID!, $accountId: ID!) {
  conversation(id: $id) {
    ...ConversationFieldsForConversationView
  }
}

query searchConversations($accountId: ID!, $query: String!) {
  account(id: $accountId) {
    id
    search(query: $query) {
      id
      conversations {
        ...ConversationFieldsForListView
      }
      query
    }
  }
}

query searchCachedConversations($query: String!, $specificityThreshold: Int) {
  conversations(query: $query, specificityThreshold: $specificityThreshold) {
    conversation {
      id
      messageId
      subject
    }
    query
  }
}

query getMatchingAddresses($inputValue: String!) {
  addresses(inputValue: $inputValue) {
    host
    mailbox
    name
  }
}

mutation sync($accountId: ID!) {
  accounts {
    sync(id: $accountId) {
      ...AccountFields
      conversations {
        ...ConversationFieldsForListView
      }
    }
  }
}

mutation setIsRead($conversationId: ID!, $isRead: Boolean!) {
  conversations {
    setIsRead(id: $conversationId, isRead: $isRead) {
      id
      isRead
    }
  }
}

mutation archive($conversationId: ID!) {
  conversations {
    archive(id: $conversationId) {
      ...ConversationFieldsForListView
    }
  }
}

mutation flag($conversationIDs: [ID!]!, $isFlagged: Boolean!) {
  conversations {
    flag(ids: $conversationIDs, isFlagged: $isFlagged) {
      id
      date
      from {
        host
        mailbox
        name
      }
      isRead
      isStarred
      labels
      snippet
      subject
    }
  }
}

mutation sendMessage($accountId: ID!, $message: MessageInput!) {
  conversations {
    sendMessage(accountId: $accountId, message: $message) {
      ...ConversationFieldsForConversationView
    }
  }
}

mutation edit(
  $accountId: ID!
  $conversationId: ID!
  $resource: PartSpecInput!
  $revision: PartSpecInput!
  $content: ContentInput!
) {
  conversations {
    edit(
      accountId: $accountId
      conversationId: $conversationId
      resource: $resource
      revision: $revision
      content: $content
    ) {
      ...ConversationFieldsForConversationView
    }
  }
}

mutation saveDraft(
  $accountId: ID!
  $conversationId: ID!
  $content: ContentInput!
) {
  conversations {
    saveDraft(accountId: $accountId, id: $conversationId, content: $content) {
      id
      presentableElements {
        id
        contents {
          revision {
            messageId
            contentId
          }
          resource {
            messageId
            contentId
          }
          type
          subtype
          content
        }
        date
        from {
          name
          mailbox
          host
        }
        editedAt
        editedBy {
          name
          mailbox
          host
        }
        isDraft
      }
      isRead
      labels
      snippet
      subject
    }
  }
}

mutation reply($accountId: ID!, $conversationId: ID!, $content: ContentInput!) {
  conversations {
    reply(accountId: $accountId, id: $conversationId, content: $content) {
      ...ConversationFieldsForConversationView
    }
  }
}

fragment AccountFields on Account {
  id
  email
  loggedIn
}

fragment ConversationFieldsForListView on Conversation {
  id
  date
  from {
    host
    mailbox
    name
  }
  isRead
  isStarred
  labels
  snippet
  subject
}

fragment ConversationFieldsForConversationView on Conversation {
  id
  date
  from {
    host
    mailbox
    name
  }
  isRead
  isStarred
  labels
  snippet
  subject
  presentableElements {
    id
    isRead
    isDraft
    contents {
      revision {
        messageId
        contentId
      }
      resource {
        messageId
        contentId
      }
      type
      subtype
      content
    }
    date
    from {
      name
      mailbox
      host
    }
    editedAt
    editedBy {
      name
      mailbox
      host
    }
  }
  replyDraft {
    id
    date
    messageId
    subject
    from {
      name
      mailbox
      host
    }
    presentables {
      id
      isRead
      isDraft
      contents {
        revision {
          messageId
          contentId
        }
        resource {
          messageId
          contentId
        }
        type
        subtype
        content
      }
      date
      from {
        name
        mailbox
        host
      }
      editedAt
      editedBy {
        name
        mailbox
        host
      }
    }
  }
  snippet
  subject
  replyRecipients(fromAccountId: $accountId) {
    from {
      name
      mailbox
      host
    }
    to {
      name
      mailbox
      host
    }
    cc {
      name
      mailbox
      host
    }
  }
}
